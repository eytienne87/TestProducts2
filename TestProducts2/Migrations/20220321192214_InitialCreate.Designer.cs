// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestProducts2.Data;

#nullable disable

namespace TestProducts2.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    [Migration("20220321192214_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.1.22076.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TestProducts2.Models.Benefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Benefit");
                });

            modelBuilder.Entity("TestProducts2.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StyleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StyleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TestProducts2.Models.ProductBenefit", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("BenefitId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "BenefitId");

                    b.ToTable("ProductBenefit");
                });

            modelBuilder.Entity("TestProducts2.Models.ProductWarranty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("WarrantyLengthId")
                        .HasColumnType("int");

                    b.Property<int?>("WarrantyNotaBeneId")
                        .HasColumnType("int");

                    b.Property<int>("WarrantyTitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarrantyLengthId");

                    b.HasIndex("WarrantyNotaBeneId");

                    b.HasIndex("WarrantyTitleId");

                    b.ToTable("ProductWarranties");
                });

            modelBuilder.Entity("TestProducts2.Models.WarrantyLength", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("WarrantiesLengths");
                });

            modelBuilder.Entity("TestProducts2.Models.WarrantyNotabene", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("WarrantiesNotabenes");
                });

            modelBuilder.Entity("TestProducts2.Models.WarrantyTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("WarrantiesTitles");
                });

            modelBuilder.Entity("TestProducts2.Models.ProductBenefit", b =>
                {
                    b.HasOne("TestProducts2.Models.Benefit", "Benefit")
                        .WithMany("ProductBenefits")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestProducts2.Models.Product", "Product")
                        .WithMany("ProductBenefits")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Benefit");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TestProducts2.Models.ProductWarranty", b =>
                {
                    b.HasOne("TestProducts2.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestProducts2.Models.WarrantyLength", "WarrantyLength")
                        .WithMany()
                        .HasForeignKey("WarrantyLengthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestProducts2.Models.WarrantyNotabene", "WarrantyNotabene")
                        .WithMany()
                        .HasForeignKey("WarrantyNotaBeneId");

                    b.HasOne("TestProducts2.Models.WarrantyTitle", "WarrantyTitle")
                        .WithMany("ProductWarranties")
                        .HasForeignKey("WarrantyTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("WarrantyLength");

                    b.Navigation("WarrantyNotabene");

                    b.Navigation("WarrantyTitle");
                });

            modelBuilder.Entity("TestProducts2.Models.Benefit", b =>
                {
                    b.Navigation("ProductBenefits");
                });

            modelBuilder.Entity("TestProducts2.Models.Product", b =>
                {
                    b.Navigation("ProductBenefits");
                });

            modelBuilder.Entity("TestProducts2.Models.WarrantyTitle", b =>
                {
                    b.Navigation("ProductWarranties");
                });
#pragma warning restore 612, 618
        }
    }
}
