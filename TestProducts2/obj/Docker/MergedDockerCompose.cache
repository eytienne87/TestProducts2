networks:
  myproject:
    driver: bridge
    name: test
services:
  db:
    container_name: postgres-server-db
    environment:
      POSTGRES_DB: mydbpostgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    image: postgres:latest
    networks:
      myproject: {}
    ports:
    - published: 5432
      target: 5432
    restart: always
    volumes:
    - db:/var/lib/postgresql/data:rw
  sql-server-db:
    container_name: sql-server-db
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Password123
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      myproject: {}
    ports:
    - published: 2300
      target: 1433
    restart: always
    volumes:
    - db:/var/lib/sqlserver/data:rw
  testproducts2:
    build:
      context: C:\Users\etessier\source\repos\TestProducts2\TestProducts2
      dockerfile: TestProducts2/Dockerfile
    container_name: test_products_2
    depends_on:
      db:
        condition: service_started
      sql-server-db:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: testproducts2
    networks:
      myproject: {}
    ports:
    - published: 5001
      target: 80
    - target: 80
    volumes:
    - C:\Users\etessier\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
version: '3.4'
volumes:
  db:
    driver: local